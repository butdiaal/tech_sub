create database tech_sub;
use tech_sub;

create table departments(
    id int primary key auto_increment,
    name varchar(255)
);

create table users(
    id int primary key auto_increment,
    name varchar(255),
    last_name varchar(255),
    login varchar(255) unique,
    password varchar(255),
    ph_num varchar(255) unique
);

create table employees(
    id int primary key auto_increment,
    name varchar(255),
    last_name varchar(255),
    login varchar(255) unique,
    password varchar(255),
    department_id int,
    foreign key (department_id) references departments(id) on delete set null
);

create table categories(
    id int primary key auto_increment,
    name varchar(255),
    level enum("1", "2", "3", "4", "5")
);

create table tickets(
    id int primary key auto_increment,
    id_user int,
    id_category int,
    description varchar(1000),
    status enum("в ожидании", "в работе", "решена"),
    creation_dt datetime,
    id_employee int,
    foreign key (id_category) references categories(id) on delete set null,
    foreign key (id_employee) references employees(id) on delete set null,
    foreign key (id_user) references users(id) on delete set null
);


create table reports(
    id int primary key auto_increment,
    id_ticket int,
    id_category int,
    start_dt datetime,
    finish_dt datetime,
    desciption varchar(255),
    empl_l_name varchar(255),
    answer varchar(255),
    foreign key (id_ticket) references tickets(id) on delete set null,
    foreign key (id_category) references categories(id) on delete set null
);

create table history_tickets(
    id int primary key auto_increment,
    message varchar(255),
    dt_mes datetime,
    id_ticket int,
    foreign key (id_ticket) references tickets(id) on delete set null
);

create table history_employee(
    id int primary key auto_increment,
    message varchar(255),
    dt_mes datetime,
    id_employee int,
    foreign key (id_employee) references employees(id) on delete set null
);


INSERT INTO users (name, last_name, login, password, ph_num) VALUES
('Диана', 'Бутько', 'diana', md5('diana'), '+79779340549');

INSERT INTO departments (name) VALUES
('Database Management');

INSERT INTO categories (name, level) VALUES
('Проблемы с БД', '3');

INSERT INTO employees (name, last_name, login, password, department_id) VALUES
('Сергей', 'Павлов', 'sergey.pavlov', 'dbMaster3', 1);

INSERT INTO tickets (id_user, id_category, description, status, creation_dt, id_employee) VALUES
    (1, 1, 'Критически медленные запросы при формировании отчетов в CRM системе.
    Время выполнения основных запросов увеличилось с 2 секунд до 2-3 минут.
    Особенно проблема заметна при работе с большими объемами данных
    (от 10,000 записей). Ошибка возникает ежедневно в пиковые часы нагрузки
    (10:00-12:00 и 15:00-17:00). В логах появляется предупреждение:
    "Query execution time exceeded 150000ms".', 'в работе', '2025-05-23 11:45:00', 1);

